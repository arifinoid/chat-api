version: '3.8'

services:
  postgres:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - '5432:5432'
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    env_file:
      - .env
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - app-network

  # redis:
  #   image: redis
  #   command: redis-server --requirepass $$REDIS_PASSWORD
  #   env_file:
  #     - .env
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - ./redis/data:/data
  #     - type: bind
  #       source: redis/data
  #       target: /data
  #       bind:
  #         create_host_path: true

  api:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    ports:
      - '8000:8000'
    depends_on:
      - auth
      - rabbitmq
    networks:
      - app-network
    command: yarn start:dev api

  chat:
    build:
      context: ./
      dockerfile: ./apps/chat/Dockerfile
    ports:
      - '7000:7000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      # - redis
    volumes:
      - .:/app
      - /app/node_modules
    command: yarn start:dev chat

  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    command: yarn start:dev auth

  user:
    build:
      context: ./
      dockerfile: ./apps/user/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - auth
      # - redis
    volumes:
      - .:/app
      - /app/node_modules
    command: yarn start:dev auth

networks:
  app-network:
    driver: bridge
